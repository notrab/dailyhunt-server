type User {
  id: ID! @unique
  name: String!
  bio: String
  email: String! @unique
  password: String!
  hunted: [Post!]! @relation(name: "UserHunted")
  made: [Post!]! @relation(name: "UserMade")
  votes: [Vote!]!
  comments: [Comment!]!
  sentNotifications: [Notification!]! @relation(name: "SentNotifications")
  notifications: [Notification!]! @relation(name: "ReceivedNotifications")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Post {
  id: ID! @unique
  url: String! @unique
  name: String!
  slug: String! @unique
  tagline: String!
  status: PostStatus @default(value: AVAILABLE)
  shortUrl: String! @unique
  hunter: User! @relation(name: "UserHunted")
  makers: [User!]! @relation(name: "UserMade")
  topics: [Topic!]!
  comments: [Comment!]!
  votes: [Vote!]!
  visits: [Visit!]!
  notifications: [Notification!]! @relation(name: "PostNotifications")
  createdAt: DateTime!
}

type Vote {
  id: ID! @unique
  user: User!
  post: Post!
  createdAt: DateTime!
}

type Topic {
  id: ID! @unique
  name: String!
  slug: String! @unique
  posts: [Post!]!
}

type Comment {
  id: ID! @unique
  user: User!
  post: Post!
  message: String!
  createdAt: DateTime!
}

type Visit {
  id: ID! @unique
  post: Post!
  createdAt: DateTime!
}

# Bonus: Comment notifications
type Notification {
  id: ID! @unique
  seen: Boolean @default(value: false)
  type: NotificationType
  from: User! @relation(name: "SentNotifications")
  to: User! @relation(name: "ReceivedNotifications")
  post: Post! @relation(name: "PostNotifications")
  createdAt: DateTime!
}

enum PostStatus {
  AVAILABLE
  COMING
}

enum NotificationType {
  COMMENT
  VOTE
}
